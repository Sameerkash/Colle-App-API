type Query {
  users(query: String): [User!]!
  posts(query: String): [Post!]!
  me: User!
  post: Post!
}

type Mutation {
  signUp(data: CreateUserInput!): AuthPayload!
  signin(data: LoginUserInput!): AuthPayload!
  deleteUser(id: ID!): User!
  deletePost(id: ID!): Post!
  createPost(data: CreatePostInput!): Post!
  updateUser(id: ID!, data: UpdateuserInput!): User!
}

type Subscription {
  post: Post!
}

type AuthPayload {
  token: String!
  user: User!
}

input LoginUserInput {
  email: String!
  password: String!
}

input CreateUserInput {
  name: String!
  email: String!
  password: String!
}

input UpdateuserInput {
  name: String
  email: String
}

input CreatePostInput {
  title: String!
  body: String!
  published: Boolean!
  author: ID!
}

type User {
  id: ID!
  password: String!
  email: String!
  name: String!
  posts: [Post!]!
}

type Post {
  id: ID!
  title: String!
  body: String!
  author: User!
}
